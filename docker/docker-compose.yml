version: '3'
services:
  mysql:
    container_name: car-service-mysql-db
    image: stupinvolodymyr/car-service-mysql-db
    build:
      context: ..
      dockerfile: docker/db/sql/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: car-service-db
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
    ports:
      - "3306:3306"
    hostname: car-service-db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h car-service-db -u user -p 123456"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservices

  mongo:
    image: mongo:7.0.0
    container_name: car-service-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: car-service-nosql-db
    volumes:
      - ./db/nosql/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - microservices

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    ports:
      - "8081:8081"  # port mapping: [external : inside docker environment]
    depends_on:
      - mongo
      - workshop-service
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/  # mongodb://{mongo-image-username}:{mongo-image-password}@{mongo-image-name}:{port}
    networks:
      - microservices


  config-service:
    container_name: car-service-config-service
    image: stupinvolodymyr/docker-car-service-config-service
    build:
      context: ..
      dockerfile: docker/builder/components/config-service/Dockerfile
      args:
        BUILD_PATH: Car-service-config-service
    ports:
      - "8888:8888"
    networks:
      - microservices

  eureka-service:
    container_name: car-service-eureka-service
    image: stupinvolodymyr/docker-car-service-eureka-service
    build:
      context: ..
      dockerfile: docker/builder/components/eureka-service/Dockerfile
      args:
        BUILD_PATH: Car-service-eureka-service
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    networks:
      - microservices

  customer-service:
    container_name: car-service-customer-service
    image: stupinvolodymyr/docker-car-service-customer-service
    build:
      context: ..
      dockerfile: docker/builder/components/customer-service/Dockerfile
      args:
        BUILD_PATH: Car-service-customer-service
    ports:
      - "8000:8000"
    depends_on:
      - config-service
      - mysql
      - eureka-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://car-service-mysql-db:3306/car-service-db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 123456
    networks:
      - microservices

  workshop-service:
    container_name: car-service-workshop-service
    image: stupinvolodymyr/docker-car-service-workshop-service
    build:
      context: ..
      dockerfile: docker/builder/components/workshop-service/Dockerfile
      args:
        BUILD_PATH: Car-service-workshop-service
    ports:
      - "8001:8001"
    depends_on:
      - config-service
      - mongo
      - eureka-service
    networks:
      - microservices
    labels:
      kompose.service.type: LoadBalancer


volumes:
  mysql_data:

networks:
  microservices:
    driver: bridge
